---
apiVersion: v1
kind: Service
metadata:
  name: router
spec:
  selector:
    app: router
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80
  type: LoadBalancer
  loadBalancerIP: {{.Values.router_ip}}

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: emojify-nginx-configmap
data:
  config: |
    events {
      worker_connections  4096;  ## Default: 1024
    }

    http {
      upstream emojify-website {
        server localhost:8000;
      }

      upstream emojify-api {
        server localhost:8001;
      }

      server {

        location / {
          proxy_pass http://emojify-website;
          proxy_set_header Host $host;
        }

        location ~ ^/api(/.*)?$ {
          proxy_pass http://emojify-api$1$is_args$args;
          proxy_pass_request_headers on;

          set $origin "{{.Values.api}}";
          if ($http_Origin = "") {
            set $origin $http_Origin;
          }

          proxy_set_header Origin $origin;
        }

      }
    }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: router
  labels:
    app: router
spec:
  replicas: {{.Values.router_replicas}}
  selector:
    matchLabels:
      app: router
  template:
    metadata:
      labels:
        app: router
      annotations:
        "consul.hashicorp.com/connect-inject": "true"
        "consul.hashicorp.com/connect-service-upstreams": "emojify-website:8000,emojify-api:8001"
    spec:
      volumes:
        - name: config
          configMap:
            name: emojify-nginx-configmap
            items:
              - key: config
                path: nginx.conf

      containers:
        - name: router
          image: nginx:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
          volumeMounts:
            - name: config
              mountPath: /etc/nginx/
              readOnly: true
